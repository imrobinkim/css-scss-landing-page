.popup {
  // Black background
  height: 100vh;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background-color: rgba($color-black, 0.8);
  z-index: 9999;
  opacity: 0; // start opacity & visibility like so instead of display: none so that animation works
  visibility: hidden;
  transition: all 0.3s;

  // White card/popup
  &__content {
    @include absCenter;

    width: 75%;
    background-color: $color-white;
    box-shadow: 0 2rem 4rem rgba($color-black, 0.2);
    border-radius: $size-border-radius;
    overflow: hidden;
    display: table; // __content is parent of __left & __right

    //initial state of content needed for animation
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.25);
    transition: all 0.4s 0.2s; // 3rd arg is transition delay
  }

  &__left {
    width: 33.33333%;
    display: table-cell;
  }

  &__right {
    width: 66.66667%;
    display: table-cell;
    vertical-align: middle; // prop. that can be used with table-cell
    padding: 3rem 5rem;
  }

  &__img {
    display: block;
    width: 100%; // parent container's width
  }

  &__text {
    font-size: 1.4rem;
    margin-bottom: 4rem;

    // Column layout.
    -moz-column-count: 2;
    -moz-column-gap: 4rem;
    -moz-column-rule: 1px solid $color-grey-light-1;
    column-count: 2;
    column-gap: 4rem; // space we want between columns
    column-rule: 1px solid $color-grey-light-1; // border between columns

    // Automatic hypenation.
    -moz-hyphens: auto; // mozilla
    -ms-hyphens: auto; // microsoft edge
    -webkit-hyphens: auto; // chrome & safari
    hyphens: auto;
  }

  // Functionality for opening popup when <a href="#popup"> is clicked
  &:target {
    opacity: 1;
    visibility: visible;
  }

  // Open states/ when popop is opened
  &:target &__content {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }

  &__close {
    &:link,
    &:visited {
      color: $color-grey-dark;
      position: absolute;
      top: 2.5rem;
      right: 2.5rem;
      font-size: 3rem;
      text-decoration: none;
      display: inline-block;
      line-height: 1; // so that :hover styles only gets applied when hovering over "x"
    }

    &:hover {
      color: $color-primary;
    }
  }
}
